/*************************************************************************************
Copyright (c) 2013, Carnegie Mellon University
All rights reserved.
Authors: Anurag Jakhotia<ajakhoti@andrew.cmu.edu>, Prasanna Velagapudi<pkv@cs.cmu.edu>

Redistribution and use in source and binary forms, with or without modification, are
permitted provided that the following conditions are met:

 -	Redistributions of source code must retain the above copyright notice, this list
 	of conditions and the following disclaimer.
 -	Redistributions in binary form must reproduce the above copyright notice, this
 	list of conditions and the following disclaimer in the documentation and/or other
 	materials provided with the 	distribution.
 -	Neither the name of Carnegie Mellon University nor the names of its contributors
 	may be used to endorse or promote products derived from this software without
 	specific prior written 	permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
***************************************************************************************/
#include "k2_client.h"
#include <std_msgs/Float32MultiArray.h>
#include <std_msgs/MultiArrayLayout.h>
#include <std_msgs/MultiArrayDimension.h>

int arraySize = 512 * 6 * 4;
int num_floats = 512 * 6 + 3;
//int streamSize = imageSize + sizeof(double);

int main(int argC,char **argV)
{

	ros::init(argC,argV,"startScan2D");
	ros::NodeHandle n;

	std::string serverAddress;
	n.getParam("/serverNameOrIP",serverAddress);

	Socket mySocket(serverAddress.c_str(),"9005",arraySize);


	ros::Publisher scan2DPublisher
		 = n.advertise<std_msgs::Float32MultiArray>("scan2DArray",30);


	std_msgs::Float32MultiArray scan;
	int i = 0;
	while(ros::ok())
	{
		scan.data.clear();
		mySocket.readData();
     		//scan = new std_msgs::Float32MultiArray;

		for(i = 0; i < num_floats; i ++) {
		    float value = 0;
		    memcpy(&value, mySocket.mBuffer + (4*i), 4);
		    scan.data.push_back(value);
		}

		scan2DPublisher.publish(scan);

		//ROS_INFO("Published scan\n");
		ros::spinOnce();
	}


}
